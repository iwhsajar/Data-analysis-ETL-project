#!/bin/bash

# --------------------------------------------------------------
# Author: Rajashwi Shrestha
# Student ID: 23929591
# CITS4407 : Analysis script
# Task to achieve in this script
#   1. Get the most popular game mechanics
#   2. Get the most popular games domain
#   3. Find the correlation between average ratings and publication year 
#   4. Find the correlation of gaming complexity and average ratings.
# ---------------------------------------------------------------

# Firstly taking the one arguments as the file 
if [ $# -ne 1 ]; then
    echo "Running the given file as : $0 <cleaned_files.tsv>" >&2
    exit 1
fi

loaded_file="$1"

#Cross checking incase file doesn’t exist or empty.
if [ ! -f "$loaded_file" ]; then
    echo "Alert! The file is empty or doesnt exist: $loaded_file" >&2
    exit 1
fi


#According to the file our mechanics is in field 13 and domain is in field 14
#Task 1: Finding the most popular gaming mechanics
awk -F'\t' 'NR > 1 && $13 != "" {
    number_part = split($13, list_mechanics, ", ");
    for (idx = 1; idx <= number_part ; idx++){
        mech_count[list_mechanics[idx]]++;
    }
}
END {
    for (mech in mech_count) {
        print mech_count[mech], mech;
    }
}' "$loaded_file" | sort -nr | head -n1 | awk '{ print "Most popular game mechanics is " substr($0, index($0, $2)) " which is found in " $1 " games" }'

# Task 2: Finding the most popular domain in the game.
awk -F'\t' 'NR > 1 && $14 != "" {
    num_domain = split($14, list_domain, ", ");
    for (idx = 1; idx <= num_domain; idx++) {
        dom_count[list_domain[idx]]++;
    }
}
END {
    for (dom in dom_count) {
        print dom_count[dom], dom;
    }
}' "$loaded_file" | sort -nr | head -n1 | awk '{ print "Most game domain is " substr($0, index($0, $2)) " which is found in " $1 " games" }'


# Task3: Finding correlation between average ratings and year published
awk -F'\t' 'NR > 1 && $3 != "" && $9 != "" {
    year = $3; rating = $9;
    sumyear += year; 
    sumrating += rating;
    sumyear_sq += year * year; 
    sumrating_sq += rating * rating;
    sumproduct += year * rating;
    count++;
}
END {
    numerator = (count * sumproduct - sumyear * sumrating);
    denominator1 = count * sumyear_sq - sumyear * sumyear;
    denominator2 = count * sumrating_sq - sumrating * sumrating;
    denominator = sqrt(denominator1 * denominator2);
    if (denominator == 0) {
        print "Correlation between average rating and year couldn’t be calculated because of less variation";
    } else {
        correlation = numerator / denominator;
        printf "After analysis, the correlation between the year of publication and the average rating is %.3f\n", correlation;
    }
}' "$loaded_file"

# Task 4: Finding correlation between game complexity and average rating
awk -F'\t' 'NR > 1 && $11 != "" && $9 != "" {
    complexity = $11;
    rating = $9;
    sumcomplexity += complexity;
    sumrating += rating;
    sumcomplexity_sq += complexity * complexity;
    sumrating_sq += rating * rating;
    sumproduct += complexity * rating;
    count++;
}
END {
    numerator = (count * sumproduct - sumcomplexity * sumrating);
    denominator1 = count * sumcomplexity_sq - sumcomplexity * sumcomplexity;
    denominator2 = count * sumrating_sq - sumrating * sumrating;
    denominator = sqrt(denominator1 * denominator2);
    if (denominator == 0) {
        print "Correlation between average rating and complexity couldn’t be calculated because of less variation.";
    } else {
        correlation = numerator / denominator;
        printf "After analysis, the correlation between the complexity of a game and the average rating is %.3f\n", correlation;
    }
}' "$loaded_file"





